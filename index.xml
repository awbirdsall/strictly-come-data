<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Strictly Come Data</title>
    <link>http://awbirdsall.github.io/strictly-come-data/</link>
    <description>Recent content on Strictly Come Data</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 17 Oct 2018 22:33:37 -0400</lastBuildDate>
    
	<atom:link href="http://awbirdsall.github.io/strictly-come-data/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Predicting Dance Scores with Machine Learning Models</title>
      <link>http://awbirdsall.github.io/strictly-come-data/posts/predicting-dance-scores-with-ml/</link>
      <pubDate>Wed, 17 Oct 2018 22:33:37 -0400</pubDate>
      
      <guid>http://awbirdsall.github.io/strictly-come-data/posts/predicting-dance-scores-with-ml/</guid>
      <description>Now that in the previous post I&amp;rsquo;ve defined the goal of our model (predict Strictly scores out of 40 for the upcoming week!) and defined teaching and testing inputs and labels from the data, it&amp;rsquo;s time to build some models!
Setting up models I&amp;rsquo;ve decided to compare the performance of three different regressors. One is a random forest regressor (RandomForestRegressor from sklearn.ensemble) and two are different gradient boosting regressors (GradientBoostingRegressor from sklearn.</description>
    </item>
    
    <item>
      <title>Getting Ready to Predict Dance Scores</title>
      <link>http://awbirdsall.github.io/strictly-come-data/posts/getting-ready-to-predict-dance-scores/</link>
      <pubDate>Tue, 16 Oct 2018 22:52:06 -0400</pubDate>
      
      <guid>http://awbirdsall.github.io/strictly-come-data/posts/getting-ready-to-predict-dance-scores/</guid>
      <description>So! After getting the data prepared in the previous post, I should be ready to use machine learning and build models? Not quite. First, I need to think a little more about the requirements of the model, how I will use the available data, and how to prepare the data for the model.
Model requirements I want to see how well a model can predict the total score a partnership will receive for a given dance.</description>
    </item>
    
    <item>
      <title>Data Preparation</title>
      <link>http://awbirdsall.github.io/strictly-come-data/posts/data-prep/</link>
      <pubDate>Mon, 15 Oct 2018 20:49:39 -0400</pubDate>
      
      <guid>http://awbirdsall.github.io/strictly-come-data/posts/data-prep/</guid>
      <description>The first step in my analysis is to collect Strictly data. Fortunately a lot of the hard work has been done for me by dedicated Strictly fans!
Anyone who has spent time on Wikipedia will not be surprised to hear the encyclopedic collection of Strictly data available there. There&amp;rsquo;s not only all of the scores for all 16 series, but also information like the highest and lowest score for each dance, for each series.</description>
    </item>
    
    <item>
      <title>Welcome to Strictly Come Data!</title>
      <link>http://awbirdsall.github.io/strictly-come-data/posts/welcome/</link>
      <pubDate>Sun, 14 Oct 2018 21:49:44 -0400</pubDate>
      
      <guid>http://awbirdsall.github.io/strictly-come-data/posts/welcome/</guid>
      <description>Welcome to Strictly Come Data! I&amp;rsquo;m analyzing the data behind the popular BBC programme Strictly Come Dancing in a series of posts. Some questions I&amp;rsquo;m interested in:
 Can I create a model to predict dancers&amp;rsquo; scores for upcoming weeks of Strictly? Can I create a model to predict who will be in the dance-off?  Stay tuned, and keeeeeep data-ing!</description>
    </item>
    
  </channel>
</rss>